{"version":3,"sources":["views/Staking/components/InfoArea.tsx","views/Staking/components/StakingTable/StakingItem.tsx","views/Staking/components/StakingTable/index.tsx","views/Staking/index.tsx"],"names":["InfoWrapper","styled","Flex","InfoValueCard","theme","colors","secondary","InfoArea","t","useTranslation","useTheme","flexDirection","alignItems","bold","fontSize","src","alt","width","height","ml","StyledDepositArea","StyledPeriodArea","StyledWithdrawArea","StyledWithdrawAction","Text","primary","StakingItem","StyledStakingTableArea","StyledTable","table","StakingTable","StyledCard","Card","StyledStakeArea","StyledContent","StyledInput","Input","StyledAmountInputArea","StyledMaxIcon","StyledButton","Button","active","Staking","useWeb3React","account","useState","lockDay","setLockDay","handleChangeLockDay","selectedLockDay","console","log","LockDayButton","children","onClick","scale","mx","p","variant","Page","mb","mr","justifyContent","mt"],"mappings":"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","file":"static/js/13.3a02fc7b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst InfoWrapper = styled(Flex)`\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst InfoValueCard = styled(Flex)`\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  width: 200px;\r\n  padding: 10px 20px;\r\n  border-radius: 6px;\r\n`\r\n\r\nconst InfoArea: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <InfoWrapper>\r\n      <Flex flexDirection=\"column\">\r\n        <Flex alignItems=\"center\">\r\n          <Text bold fontSize=\"24px\">{t('Treasury')}</Text>\r\n          <Image src=\"/images/treasury.png\" alt=\"Treaury\" width={16} height={16} ml=\"5px\"/>\r\n        </Flex>\r\n        <InfoValueCard>\r\n          <Text>{t('$%treasury%')}</Text>\r\n        </InfoValueCard>\r\n      </Flex>\r\n      <Flex flexDirection=\"column\">\r\n        <Flex alignItems=\"center\">\r\n          <Text bold fontSize=\"24px\">{t('Max APY')}</Text>\r\n          <Image src=\"/images/apy.png\" alt=\"APY\" width={16} height={16} ml=\"5px\"/>\r\n        </Flex>\r\n        <InfoValueCard>\r\n          <Text>{t('$%apy%')}</Text>\r\n        </InfoValueCard>\r\n      </Flex>\r\n      <Flex flexDirection=\"column\">\r\n        <Flex alignItems=\"center\">\r\n          <Text bold fontSize=\"24px\">{t('$WATER Price')}</Text>\r\n          <Image src=\"/images/price.png\" alt=\"Price\" width={16} height={16} ml=\"5px\"/>\r\n        </Flex>\r\n        <InfoValueCard>\r\n          <Text>{t('$%price%')}</Text>\r\n        </InfoValueCard>\r\n      </Flex>\r\n      <Flex flexDirection=\"column\">\r\n        <Flex alignItems=\"center\">\r\n          <Text bold fontSize=\"24px\">{t('Next Rebase')}</Text>\r\n          <Image src=\"/images/rebase.png\" alt=\"Rebase\" width={16} height={16} ml=\"5px\"/>\r\n        </Flex>\r\n        <InfoValueCard>\r\n          <Text>{t('$%rebase%')}</Text>\r\n        </InfoValueCard>\r\n      </Flex>\r\n    </InfoWrapper>\r\n  )\r\n}\r\n\r\nexport default InfoArea\r\n","import React from 'react'\r\nimport { Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst StyledDepositArea = styled(Flex)`\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  border-left: 10px solid white;\r\n  border-radius: 6px 0px 0px 6px;\r\n  padding: 20px 0;\r\n  margin-top: 10px;\r\n`\r\n\r\nconst StyledPeriodArea = styled(Flex)`\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  padding: 20px 0;\r\n  margin-top: 10px;\r\n`\r\n\r\nconst StyledWithdrawArea = styled(Flex)`\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  border-radius: 0px 6px 6px 0px;\r\n  padding: 15px 0;\r\n  margin-top: 10px;\r\n`\r\n\r\nconst StyledWithdrawAction = styled(Text)`\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  padding: 5px 0;\r\n  width: 160px;\r\n  border-radius: 6px;\r\n`\r\n\r\nconst StakingItem: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <tr>\r\n      <th>\r\n        <StyledDepositArea>\r\n          <Text bold fontSize=\"20px\">{t('1922000 $WATER')}</Text>\r\n        </StyledDepositArea>\r\n      </th>\r\n      <th>\r\n        <StyledPeriodArea>\r\n          <Text bold fontSize=\"20px\">{t('1 Day')}</Text>\r\n        </StyledPeriodArea>\r\n      </th>\r\n      <th>\r\n        <StyledWithdrawArea>\r\n          <StyledWithdrawAction bold fontSize=\"20px\">{t('Withdraw')}</StyledWithdrawAction>\r\n        </StyledWithdrawArea>\r\n      </th>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default StakingItem\r\n","import React from 'react'\r\nimport { Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport StakingItem from './StakingItem'\r\n\r\nconst StyledStakingTableArea = styled(Flex)`\r\n  margin-top: 50px;\r\n  width: 100%;\r\n  max-width: 1200px;\r\n`\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n`\r\n\r\nconst StakingTable: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <StyledStakingTableArea>\r\n      <StyledTable>\r\n        <thead>\r\n          <tr>\r\n            <th><Text bold fontSize=\"20px\">{t('Deposited')}</Text></th>\r\n            <th><Text bold fontSize=\"20px\">{t('Locking Period')}</Text></th>\r\n            <th><Text bold fontSize=\"20px\">{t('Withdraw')}</Text></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <StakingItem />\r\n          <StakingItem />\r\n        </tbody>\r\n      </StyledTable>\r\n    </StyledStakingTableArea>\r\n  )\r\n}\r\n\r\nexport default StakingTable\r\n","import React, { useState } from 'react'\r\nimport { Button, Card, Flex, Image, Input, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Page from '../Page'\r\nimport InfoArea from './components/InfoArea'\r\nimport StakingTable from './components/StakingTable'\r\n\r\nconst StyledCard = styled(Card)`\r\n  padding: 20px 0;\r\n`\r\n\r\nconst StyledStakeArea = styled(Flex)`\r\n  margin-top: 30px;\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledContent = styled(Flex)`\r\n  max-width: 450px;\r\n  min-height: 280px;\r\n  margin: auto;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  outline: none;\r\n  border: none;\r\n`\r\n\r\nconst StyledAmountInputArea = styled(Flex)`\r\n  border: 1px solid white;\r\n  border-radius: 6px;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledMaxIcon = styled(Text)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst StyledButton = styled(Button)<{active: boolean}>`\r\n  flex-grow: 1;\r\n  background-color: ${({ theme, active }) => active ? theme.colors.primary : \"white\"};\r\n  color: ${({ theme, active }) => active ? \"white\" : theme.colors.primary};\r\n`\r\n\r\nconst Staking: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n  const [lockDay, setLockDay] = useState(1)\r\n\r\n  const handleChangeLockDay = (selectedLockDay: number) => {\r\n    console.log(\"pooh, selectedLockDay = \", selectedLockDay)\r\n    setLockDay(selectedLockDay)\r\n  }\r\n\r\n  const LockDayButton = ({ children, onClick, active }) => (\r\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick} active={active}>\r\n      {children}\r\n    </StyledButton>\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <InfoArea />\r\n      <StyledStakeArea>\r\n        <Flex flexDirection=\"column\" width=\"49%\">\r\n          <Text bold fontSize=\"24px\">{t('Stake')}</Text>\r\n          <StyledCard>\r\n            <StyledContent flexDirection=\"column\" mb=\"10px\">\r\n              <Flex flexDirection=\"column\" mb=\"10px\">\r\n                <Text bold fontSize=\"18px\" mb=\"5px\">{t('Amount')}</Text>\r\n                <StyledAmountInputArea>\r\n                  <StyledInput />\r\n                  <StyledMaxIcon mr=\"10px\">{t('Max')}</StyledMaxIcon>\r\n                </StyledAmountInputArea>\r\n              </Flex>\r\n              <Flex flexDirection=\"column\" mb=\"20px\">\r\n                <Text bold fontSize=\"18px\" mb=\"5px\">{t('Lock Period')}</Text>\r\n                <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n                  <LockDayButton onClick={() => handleChangeLockDay(1)} active={lockDay === 1} >{t('1 day')}</LockDayButton>\r\n                  <LockDayButton onClick={() => handleChangeLockDay(7)} active={lockDay === 7} >{t('7 days')}</LockDayButton>\r\n                  <LockDayButton onClick={() => handleChangeLockDay(30)} active={lockDay === 30} >{t('30 days')}</LockDayButton>\r\n                  <LockDayButton onClick={() => handleChangeLockDay(365)} active={lockDay === 365} >{t('365 days')}</LockDayButton>\r\n                </Flex>\r\n              </Flex>\r\n              <Flex alignItems=\"center\" width=\"100%\" justifyContent=\"center\" mb=\"10px\">\r\n                <Button variant=\"secondary\" width=\"300px\">{t('10,101% APY')}</Button>\r\n              </Flex>\r\n              <Flex alignItems=\"center\" width=\"100%\" justifyContent=\"center\">\r\n                <Button variant=\"primary\" width=\"100%\">{t('Stake $Watter')}</Button>\r\n              </Flex>\r\n            </StyledContent>\r\n          </StyledCard>\r\n        </Flex>\r\n        <Flex flexDirection=\"column\" width=\"49%\">\r\n          <Text bold fontSize=\"24px\">{t('Statistics')}</Text>\r\n          <StyledCard>\r\n            <StyledContent>\r\n              <Flex flexDirection=\"column\" justifyContent=\"space-between\" width=\"100%\">\r\n                <Flex justifyContent=\"space-between\" width=\"100%\" mb=\"25px\">\r\n                  <Flex flexDirection=\"column\" width=\"49%\">\r\n                    <Text bold fontSize=\"18px\" mb=\"5px\">{t('Total Value Locked')}</Text>\r\n                    <Text>{t('$120,029.20')}</Text>\r\n                  </Flex>\r\n                  <Flex flexDirection=\"column\" width=\"49%\">\r\n                    <Text bold fontSize=\"18px\" mb=\"5px\">{t('Total Value Staked')}</Text>\r\n                    <Text>{t('$120,000.00')}</Text>\r\n                  </Flex>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\" width=\"100%\" mb=\"25px\">\r\n                  <Flex flexDirection=\"column\" width=\"49%\">\r\n                    <Text bold fontSize=\"18px\" mb=\"5px\">{t('Max APY')}</Text>\r\n                    <Text>{t('10,292.29%')}</Text>\r\n                  </Flex>\r\n                  <Flex flexDirection=\"column\" width=\"49%\">\r\n                    <Text bold fontSize=\"18px\" mb=\"5px\">{t('Max Daily Rate')}</Text>\r\n                    <Text>{t('2% ROI')}</Text>\r\n                  </Flex>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\" width=\"100%\">\r\n                  <Flex flexDirection=\"column\" width=\"49%\">\r\n                    <Text bold fontSize=\"18px\" mb=\"5px\">{t('Market Cap')}</Text>\r\n                    <Text>{t('$139,220,029.20')}</Text>\r\n                  </Flex>\r\n                  <Flex flexDirection=\"column\" width=\"49%\">\r\n                    <Text bold fontSize=\"18px\" mb=\"5px\">{t('Floor Price')}</Text>\r\n                    <Text>{t('$29')}</Text>\r\n                  </Flex>\r\n                </Flex>\r\n              </Flex>\r\n            </StyledContent>\r\n          </StyledCard>\r\n        </Flex>\r\n      </StyledStakeArea>\r\n      <StakingTable />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Staking\r\n"],"sourceRoot":""}